// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testdata/tests.proto

package testdata

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	examples "github.com/jackskj/protoc-gen-map/examples"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NestedEnumResponse_NestedMsg_NestedEnum int32

const (
	NestedEnumResponse_NestedMsg_span NestedEnumResponse_NestedMsg_NestedEnum = 0
	NestedEnumResponse_NestedMsg_egg  NestedEnumResponse_NestedMsg_NestedEnum = 1
)

var NestedEnumResponse_NestedMsg_NestedEnum_name = map[int32]string{
	0: "span",
	1: "egg",
}

var NestedEnumResponse_NestedMsg_NestedEnum_value = map[string]int32{
	"span": 0,
	"egg":  1,
}

func (x NestedEnumResponse_NestedMsg_NestedEnum) String() string {
	return proto.EnumName(NestedEnumResponse_NestedMsg_NestedEnum_name, int32(x))
}

func (NestedEnumResponse_NestedMsg_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{15, 0, 0}
}

type TypeCastingResponse struct {
	DoubleCast           float64              `protobuf:"fixed64,1,opt,name=double_cast,json=doubleCast,proto3" json:"double_cast,omitempty"`
	FloatCast            float32              `protobuf:"fixed32,2,opt,name=float_cast,json=floatCast,proto3" json:"float_cast,omitempty"`
	Int32Cast            int32                `protobuf:"varint,3,opt,name=int32_cast,json=int32Cast,proto3" json:"int32_cast,omitempty"`
	Int64Cast            int64                `protobuf:"varint,4,opt,name=int64_cast,json=int64Cast,proto3" json:"int64_cast,omitempty"`
	Uint32Cast           uint32               `protobuf:"varint,5,opt,name=uint32_cast,json=uint32Cast,proto3" json:"uint32_cast,omitempty"`
	Uint64Cast           uint64               `protobuf:"varint,6,opt,name=uint64_cast,json=uint64Cast,proto3" json:"uint64_cast,omitempty"`
	Sint32Cast           int32                `protobuf:"zigzag32,7,opt,name=sint32_cast,json=sint32Cast,proto3" json:"sint32_cast,omitempty"`
	Sint64Cast           int64                `protobuf:"zigzag64,8,opt,name=sint64_cast,json=sint64Cast,proto3" json:"sint64_cast,omitempty"`
	Fixed32Cast          uint32               `protobuf:"fixed32,9,opt,name=fixed32_cast,json=fixed32Cast,proto3" json:"fixed32_cast,omitempty"`
	Fixed64Cast          uint64               `protobuf:"fixed64,10,opt,name=fixed64_cast,json=fixed64Cast,proto3" json:"fixed64_cast,omitempty"`
	Sfixed32Cast         int32                `protobuf:"fixed32,11,opt,name=sfixed32_cast,json=sfixed32Cast,proto3" json:"sfixed32_cast,omitempty"`
	Sfixed64Cast         int64                `protobuf:"fixed64,12,opt,name=sfixed64_cast,json=sfixed64Cast,proto3" json:"sfixed64_cast,omitempty"`
	BoolCast             bool                 `protobuf:"varint,13,opt,name=bool_cast,json=boolCast,proto3" json:"bool_cast,omitempty"`
	StringCast           string               `protobuf:"bytes,14,opt,name=string_cast,json=stringCast,proto3" json:"string_cast,omitempty"`
	TimestampCast        *timestamp.Timestamp `protobuf:"bytes,15,opt,name=timestamp_cast,json=timestampCast,proto3" json:"timestamp_cast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TypeCastingResponse) Reset()         { *m = TypeCastingResponse{} }
func (m *TypeCastingResponse) String() string { return proto.CompactTextString(m) }
func (*TypeCastingResponse) ProtoMessage()    {}
func (*TypeCastingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{0}
}

func (m *TypeCastingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeCastingResponse.Unmarshal(m, b)
}
func (m *TypeCastingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeCastingResponse.Marshal(b, m, deterministic)
}
func (m *TypeCastingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeCastingResponse.Merge(m, src)
}
func (m *TypeCastingResponse) XXX_Size() int {
	return xxx_messageInfo_TypeCastingResponse.Size(m)
}
func (m *TypeCastingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeCastingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TypeCastingResponse proto.InternalMessageInfo

func (m *TypeCastingResponse) GetDoubleCast() float64 {
	if m != nil {
		return m.DoubleCast
	}
	return 0
}

func (m *TypeCastingResponse) GetFloatCast() float32 {
	if m != nil {
		return m.FloatCast
	}
	return 0
}

func (m *TypeCastingResponse) GetInt32Cast() int32 {
	if m != nil {
		return m.Int32Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetInt64Cast() int64 {
	if m != nil {
		return m.Int64Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetUint32Cast() uint32 {
	if m != nil {
		return m.Uint32Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetUint64Cast() uint64 {
	if m != nil {
		return m.Uint64Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetSint32Cast() int32 {
	if m != nil {
		return m.Sint32Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetSint64Cast() int64 {
	if m != nil {
		return m.Sint64Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetFixed32Cast() uint32 {
	if m != nil {
		return m.Fixed32Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetFixed64Cast() uint64 {
	if m != nil {
		return m.Fixed64Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetSfixed32Cast() int32 {
	if m != nil {
		return m.Sfixed32Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetSfixed64Cast() int64 {
	if m != nil {
		return m.Sfixed64Cast
	}
	return 0
}

func (m *TypeCastingResponse) GetBoolCast() bool {
	if m != nil {
		return m.BoolCast
	}
	return false
}

func (m *TypeCastingResponse) GetStringCast() string {
	if m != nil {
		return m.StringCast
	}
	return ""
}

func (m *TypeCastingResponse) GetTimestampCast() *timestamp.Timestamp {
	if m != nil {
		return m.TimestampCast
	}
	return nil
}

type TypeRequest struct {
	TypeValue            string   `protobuf:"bytes,1,opt,name=type_value,json=typeValue,proto3" json:"type_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeRequest) Reset()         { *m = TypeRequest{} }
func (m *TypeRequest) String() string { return proto.CompactTextString(m) }
func (*TypeRequest) ProtoMessage()    {}
func (*TypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{1}
}

func (m *TypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeRequest.Unmarshal(m, b)
}
func (m *TypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeRequest.Marshal(b, m, deterministic)
}
func (m *TypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeRequest.Merge(m, src)
}
func (m *TypeRequest) XXX_Size() int {
	return xxx_messageInfo_TypeRequest.Size(m)
}
func (m *TypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TypeRequest proto.InternalMessageInfo

func (m *TypeRequest) GetTypeValue() string {
	if m != nil {
		return m.TypeValue
	}
	return ""
}

type GoTypesResponse struct {
	GoFloat64            float64              `protobuf:"fixed64,1,opt,name=go_float64,json=goFloat64,proto3" json:"go_float64,omitempty"`
	GoFloat32            float32              `protobuf:"fixed32,2,opt,name=go_float32,json=goFloat32,proto3" json:"go_float32,omitempty"`
	GoInt32              int32                `protobuf:"varint,3,opt,name=go_int32,json=goInt32,proto3" json:"go_int32,omitempty"`
	GoInt64              int64                `protobuf:"varint,4,opt,name=go_int64,json=goInt64,proto3" json:"go_int64,omitempty"`
	GoUint32             uint32               `protobuf:"varint,5,opt,name=go_uint32,json=goUint32,proto3" json:"go_uint32,omitempty"`
	GoUint64             uint64               `protobuf:"varint,6,opt,name=go_uint64,json=goUint64,proto3" json:"go_uint64,omitempty"`
	GoBool               bool                 `protobuf:"varint,7,opt,name=go_bool,json=goBool,proto3" json:"go_bool,omitempty"`
	GoString             string               `protobuf:"bytes,8,opt,name=go_string,json=goString,proto3" json:"go_string,omitempty"`
	GoTimestamp          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=go_timestamp,json=goTimestamp,proto3" json:"go_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GoTypesResponse) Reset()         { *m = GoTypesResponse{} }
func (m *GoTypesResponse) String() string { return proto.CompactTextString(m) }
func (*GoTypesResponse) ProtoMessage()    {}
func (*GoTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{2}
}

func (m *GoTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoTypesResponse.Unmarshal(m, b)
}
func (m *GoTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoTypesResponse.Marshal(b, m, deterministic)
}
func (m *GoTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoTypesResponse.Merge(m, src)
}
func (m *GoTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GoTypesResponse.Size(m)
}
func (m *GoTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoTypesResponse proto.InternalMessageInfo

func (m *GoTypesResponse) GetGoFloat64() float64 {
	if m != nil {
		return m.GoFloat64
	}
	return 0
}

func (m *GoTypesResponse) GetGoFloat32() float32 {
	if m != nil {
		return m.GoFloat32
	}
	return 0
}

func (m *GoTypesResponse) GetGoInt32() int32 {
	if m != nil {
		return m.GoInt32
	}
	return 0
}

func (m *GoTypesResponse) GetGoInt64() int64 {
	if m != nil {
		return m.GoInt64
	}
	return 0
}

func (m *GoTypesResponse) GetGoUint32() uint32 {
	if m != nil {
		return m.GoUint32
	}
	return 0
}

func (m *GoTypesResponse) GetGoUint64() uint64 {
	if m != nil {
		return m.GoUint64
	}
	return 0
}

func (m *GoTypesResponse) GetGoBool() bool {
	if m != nil {
		return m.GoBool
	}
	return false
}

func (m *GoTypesResponse) GetGoString() string {
	if m != nil {
		return m.GoString
	}
	return ""
}

func (m *GoTypesResponse) GetGoTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.GoTimestamp
	}
	return nil
}

type RepeatedAssociationsResponse struct {
	BlogId               uint32         `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	Post                 *examples.Post `protobuf:"bytes,2,opt,name=post,proto3" json:"post,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RepeatedAssociationsResponse) Reset()         { *m = RepeatedAssociationsResponse{} }
func (m *RepeatedAssociationsResponse) String() string { return proto.CompactTextString(m) }
func (*RepeatedAssociationsResponse) ProtoMessage()    {}
func (*RepeatedAssociationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{3}
}

func (m *RepeatedAssociationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedAssociationsResponse.Unmarshal(m, b)
}
func (m *RepeatedAssociationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedAssociationsResponse.Marshal(b, m, deterministic)
}
func (m *RepeatedAssociationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedAssociationsResponse.Merge(m, src)
}
func (m *RepeatedAssociationsResponse) XXX_Size() int {
	return xxx_messageInfo_RepeatedAssociationsResponse.Size(m)
}
func (m *RepeatedAssociationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedAssociationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedAssociationsResponse proto.InternalMessageInfo

func (m *RepeatedAssociationsResponse) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

func (m *RepeatedAssociationsResponse) GetPost() *examples.Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type AuthorUserNameResponse struct {
	AuthorUsername       string   `protobuf:"bytes,1,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorUserNameResponse) Reset()         { *m = AuthorUserNameResponse{} }
func (m *AuthorUserNameResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorUserNameResponse) ProtoMessage()    {}
func (*AuthorUserNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{4}
}

func (m *AuthorUserNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorUserNameResponse.Unmarshal(m, b)
}
func (m *AuthorUserNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorUserNameResponse.Marshal(b, m, deterministic)
}
func (m *AuthorUserNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorUserNameResponse.Merge(m, src)
}
func (m *AuthorUserNameResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorUserNameResponse.Size(m)
}
func (m *AuthorUserNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorUserNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorUserNameResponse proto.InternalMessageInfo

func (m *AuthorUserNameResponse) GetAuthorUsername() string {
	if m != nil {
		return m.AuthorUsername
	}
	return ""
}

type RepeatedPrimativeResponse struct {
	RepeatedInt          []uint32 `protobuf:"varint,1,rep,packed,name=repeated_int,json=repeatedInt,proto3" json:"repeated_int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatedPrimativeResponse) Reset()         { *m = RepeatedPrimativeResponse{} }
func (m *RepeatedPrimativeResponse) String() string { return proto.CompactTextString(m) }
func (*RepeatedPrimativeResponse) ProtoMessage()    {}
func (*RepeatedPrimativeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{5}
}

func (m *RepeatedPrimativeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedPrimativeResponse.Unmarshal(m, b)
}
func (m *RepeatedPrimativeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedPrimativeResponse.Marshal(b, m, deterministic)
}
func (m *RepeatedPrimativeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedPrimativeResponse.Merge(m, src)
}
func (m *RepeatedPrimativeResponse) XXX_Size() int {
	return xxx_messageInfo_RepeatedPrimativeResponse.Size(m)
}
func (m *RepeatedPrimativeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedPrimativeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedPrimativeResponse proto.InternalMessageInfo

func (m *RepeatedPrimativeResponse) GetRepeatedInt() []uint32 {
	if m != nil {
		return m.RepeatedInt
	}
	return nil
}

type RepeatedEmptyResponse struct {
	BlogId               uint32           `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	EmptyResponse        []*EmptyResponse `protobuf:"bytes,2,rep,name=empty_response,json=emptyResponse,proto3" json:"empty_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RepeatedEmptyResponse) Reset()         { *m = RepeatedEmptyResponse{} }
func (m *RepeatedEmptyResponse) String() string { return proto.CompactTextString(m) }
func (*RepeatedEmptyResponse) ProtoMessage()    {}
func (*RepeatedEmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{6}
}

func (m *RepeatedEmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedEmptyResponse.Unmarshal(m, b)
}
func (m *RepeatedEmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedEmptyResponse.Marshal(b, m, deterministic)
}
func (m *RepeatedEmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedEmptyResponse.Merge(m, src)
}
func (m *RepeatedEmptyResponse) XXX_Size() int {
	return xxx_messageInfo_RepeatedEmptyResponse.Size(m)
}
func (m *RepeatedEmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedEmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedEmptyResponse proto.InternalMessageInfo

func (m *RepeatedEmptyResponse) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

func (m *RepeatedEmptyResponse) GetEmptyResponse() []*EmptyResponse {
	if m != nil {
		return m.EmptyResponse
	}
	return nil
}

type RepeatedTimestampResponse struct {
	BlogId               uint32                 `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	PostCreatedOn        []*timestamp.Timestamp `protobuf:"bytes,2,rep,name=post_created_on,json=postCreatedOn,proto3" json:"post_created_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RepeatedTimestampResponse) Reset()         { *m = RepeatedTimestampResponse{} }
func (m *RepeatedTimestampResponse) String() string { return proto.CompactTextString(m) }
func (*RepeatedTimestampResponse) ProtoMessage()    {}
func (*RepeatedTimestampResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{7}
}

func (m *RepeatedTimestampResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedTimestampResponse.Unmarshal(m, b)
}
func (m *RepeatedTimestampResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedTimestampResponse.Marshal(b, m, deterministic)
}
func (m *RepeatedTimestampResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedTimestampResponse.Merge(m, src)
}
func (m *RepeatedTimestampResponse) XXX_Size() int {
	return xxx_messageInfo_RepeatedTimestampResponse.Size(m)
}
func (m *RepeatedTimestampResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedTimestampResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedTimestampResponse proto.InternalMessageInfo

func (m *RepeatedTimestampResponse) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

func (m *RepeatedTimestampResponse) GetPostCreatedOn() []*timestamp.Timestamp {
	if m != nil {
		return m.PostCreatedOn
	}
	return nil
}

type NestedFieldResponse struct {
	BlogId               uint32         `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	Empty                *EmptyResponse `protobuf:"bytes,2,opt,name=empty,proto3" json:"empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NestedFieldResponse) Reset()         { *m = NestedFieldResponse{} }
func (m *NestedFieldResponse) String() string { return proto.CompactTextString(m) }
func (*NestedFieldResponse) ProtoMessage()    {}
func (*NestedFieldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{8}
}

func (m *NestedFieldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedFieldResponse.Unmarshal(m, b)
}
func (m *NestedFieldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedFieldResponse.Marshal(b, m, deterministic)
}
func (m *NestedFieldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedFieldResponse.Merge(m, src)
}
func (m *NestedFieldResponse) XXX_Size() int {
	return xxx_messageInfo_NestedFieldResponse.Size(m)
}
func (m *NestedFieldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedFieldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NestedFieldResponse proto.InternalMessageInfo

func (m *NestedFieldResponse) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

func (m *NestedFieldResponse) GetEmpty() *EmptyResponse {
	if m != nil {
		return m.Empty
	}
	return nil
}

type AssociationInCollectionResponse struct {
	TagId                uint32     `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagPost              []*TagPost `protobuf:"bytes,2,rep,name=tag_post,json=tagPost,proto3" json:"tag_post,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AssociationInCollectionResponse) Reset()         { *m = AssociationInCollectionResponse{} }
func (m *AssociationInCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*AssociationInCollectionResponse) ProtoMessage()    {}
func (*AssociationInCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{9}
}

func (m *AssociationInCollectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociationInCollectionResponse.Unmarshal(m, b)
}
func (m *AssociationInCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociationInCollectionResponse.Marshal(b, m, deterministic)
}
func (m *AssociationInCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociationInCollectionResponse.Merge(m, src)
}
func (m *AssociationInCollectionResponse) XXX_Size() int {
	return xxx_messageInfo_AssociationInCollectionResponse.Size(m)
}
func (m *AssociationInCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociationInCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssociationInCollectionResponse proto.InternalMessageInfo

func (m *AssociationInCollectionResponse) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *AssociationInCollectionResponse) GetTagPost() []*TagPost {
	if m != nil {
		return m.TagPost
	}
	return nil
}

type TagPost struct {
	PostId               uint32    `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	PostBlog             *PostBlog `protobuf:"bytes,2,opt,name=post_blog,json=postBlog,proto3" json:"post_blog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TagPost) Reset()         { *m = TagPost{} }
func (m *TagPost) String() string { return proto.CompactTextString(m) }
func (*TagPost) ProtoMessage()    {}
func (*TagPost) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{10}
}

func (m *TagPost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagPost.Unmarshal(m, b)
}
func (m *TagPost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagPost.Marshal(b, m, deterministic)
}
func (m *TagPost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagPost.Merge(m, src)
}
func (m *TagPost) XXX_Size() int {
	return xxx_messageInfo_TagPost.Size(m)
}
func (m *TagPost) XXX_DiscardUnknown() {
	xxx_messageInfo_TagPost.DiscardUnknown(m)
}

var xxx_messageInfo_TagPost proto.InternalMessageInfo

func (m *TagPost) GetPostId() uint32 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *TagPost) GetPostBlog() *PostBlog {
	if m != nil {
		return m.PostBlog
	}
	return nil
}

type PostBlog struct {
	BlogId               uint32   `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostBlog) Reset()         { *m = PostBlog{} }
func (m *PostBlog) String() string { return proto.CompactTextString(m) }
func (*PostBlog) ProtoMessage()    {}
func (*PostBlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{11}
}

func (m *PostBlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostBlog.Unmarshal(m, b)
}
func (m *PostBlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostBlog.Marshal(b, m, deterministic)
}
func (m *PostBlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostBlog.Merge(m, src)
}
func (m *PostBlog) XXX_Size() int {
	return xxx_messageInfo_PostBlog.Size(m)
}
func (m *PostBlog) XXX_DiscardUnknown() {
	xxx_messageInfo_PostBlog.DiscardUnknown(m)
}

var xxx_messageInfo_PostBlog proto.InternalMessageInfo

func (m *PostBlog) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

type NestedBlog struct {
	BlogId               uint32           `protobuf:"varint,1,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	BlogTitle            string           `protobuf:"bytes,2,opt,name=blog_title,json=blogTitle,proto3" json:"blog_title,omitempty"`
	Author               *examples.Author `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NestedBlog) Reset()         { *m = NestedBlog{} }
func (m *NestedBlog) String() string { return proto.CompactTextString(m) }
func (*NestedBlog) ProtoMessage()    {}
func (*NestedBlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{12}
}

func (m *NestedBlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedBlog.Unmarshal(m, b)
}
func (m *NestedBlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedBlog.Marshal(b, m, deterministic)
}
func (m *NestedBlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedBlog.Merge(m, src)
}
func (m *NestedBlog) XXX_Size() int {
	return xxx_messageInfo_NestedBlog.Size(m)
}
func (m *NestedBlog) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedBlog.DiscardUnknown(m)
}

var xxx_messageInfo_NestedBlog proto.InternalMessageInfo

func (m *NestedBlog) GetBlogId() uint32 {
	if m != nil {
		return m.BlogId
	}
	return 0
}

func (m *NestedBlog) GetBlogTitle() string {
	if m != nil {
		return m.BlogTitle
	}
	return ""
}

func (m *NestedBlog) GetAuthor() *examples.Author {
	if m != nil {
		return m.Author
	}
	return nil
}

type CollectionInAssociationResponse struct {
	PostId               uint32   `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Post                 *OnePost `protobuf:"bytes,2,opt,name=post,proto3" json:"post,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionInAssociationResponse) Reset()         { *m = CollectionInAssociationResponse{} }
func (m *CollectionInAssociationResponse) String() string { return proto.CompactTextString(m) }
func (*CollectionInAssociationResponse) ProtoMessage()    {}
func (*CollectionInAssociationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{13}
}

func (m *CollectionInAssociationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInAssociationResponse.Unmarshal(m, b)
}
func (m *CollectionInAssociationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInAssociationResponse.Marshal(b, m, deterministic)
}
func (m *CollectionInAssociationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInAssociationResponse.Merge(m, src)
}
func (m *CollectionInAssociationResponse) XXX_Size() int {
	return xxx_messageInfo_CollectionInAssociationResponse.Size(m)
}
func (m *CollectionInAssociationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInAssociationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInAssociationResponse proto.InternalMessageInfo

func (m *CollectionInAssociationResponse) GetPostId() uint32 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *CollectionInAssociationResponse) GetPost() *OnePost {
	if m != nil {
		return m.Post
	}
	return nil
}

type OnePost struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment              []*examples.Comment `protobuf:"bytes,2,rep,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OnePost) Reset()         { *m = OnePost{} }
func (m *OnePost) String() string { return proto.CompactTextString(m) }
func (*OnePost) ProtoMessage()    {}
func (*OnePost) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{14}
}

func (m *OnePost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnePost.Unmarshal(m, b)
}
func (m *OnePost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnePost.Marshal(b, m, deterministic)
}
func (m *OnePost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnePost.Merge(m, src)
}
func (m *OnePost) XXX_Size() int {
	return xxx_messageInfo_OnePost.Size(m)
}
func (m *OnePost) XXX_DiscardUnknown() {
	xxx_messageInfo_OnePost.DiscardUnknown(m)
}

var xxx_messageInfo_OnePost proto.InternalMessageInfo

func (m *OnePost) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OnePost) GetComment() []*examples.Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type NestedEnumResponse struct {
	Id                   string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NestedMsg            *NestedEnumResponse_NestedMsg `protobuf:"bytes,2,opt,name=nested_msg,json=nestedMsg,proto3" json:"nested_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *NestedEnumResponse) Reset()         { *m = NestedEnumResponse{} }
func (m *NestedEnumResponse) String() string { return proto.CompactTextString(m) }
func (*NestedEnumResponse) ProtoMessage()    {}
func (*NestedEnumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{15}
}

func (m *NestedEnumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedEnumResponse.Unmarshal(m, b)
}
func (m *NestedEnumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedEnumResponse.Marshal(b, m, deterministic)
}
func (m *NestedEnumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedEnumResponse.Merge(m, src)
}
func (m *NestedEnumResponse) XXX_Size() int {
	return xxx_messageInfo_NestedEnumResponse.Size(m)
}
func (m *NestedEnumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedEnumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NestedEnumResponse proto.InternalMessageInfo

func (m *NestedEnumResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NestedEnumResponse) GetNestedMsg() *NestedEnumResponse_NestedMsg {
	if m != nil {
		return m.NestedMsg
	}
	return nil
}

type NestedEnumResponse_NestedMsg struct {
	NestedId             string                                  `protobuf:"bytes,1,opt,name=nested_id,json=nestedId,proto3" json:"nested_id,omitempty"`
	NestedEnum           NestedEnumResponse_NestedMsg_NestedEnum `protobuf:"varint,2,opt,name=nested_enum,json=nestedEnum,proto3,enum=testdata.NestedEnumResponse_NestedMsg_NestedEnum" json:"nested_enum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *NestedEnumResponse_NestedMsg) Reset()         { *m = NestedEnumResponse_NestedMsg{} }
func (m *NestedEnumResponse_NestedMsg) String() string { return proto.CompactTextString(m) }
func (*NestedEnumResponse_NestedMsg) ProtoMessage()    {}
func (*NestedEnumResponse_NestedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{15, 0}
}

func (m *NestedEnumResponse_NestedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedEnumResponse_NestedMsg.Unmarshal(m, b)
}
func (m *NestedEnumResponse_NestedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedEnumResponse_NestedMsg.Marshal(b, m, deterministic)
}
func (m *NestedEnumResponse_NestedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedEnumResponse_NestedMsg.Merge(m, src)
}
func (m *NestedEnumResponse_NestedMsg) XXX_Size() int {
	return xxx_messageInfo_NestedEnumResponse_NestedMsg.Size(m)
}
func (m *NestedEnumResponse_NestedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedEnumResponse_NestedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_NestedEnumResponse_NestedMsg proto.InternalMessageInfo

func (m *NestedEnumResponse_NestedMsg) GetNestedId() string {
	if m != nil {
		return m.NestedId
	}
	return ""
}

func (m *NestedEnumResponse_NestedMsg) GetNestedEnum() NestedEnumResponse_NestedMsg_NestedEnum {
	if m != nil {
		return m.NestedEnum
	}
	return NestedEnumResponse_NestedMsg_span
}

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{16}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type EmptyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyResponse) Reset()         { *m = EmptyResponse{} }
func (m *EmptyResponse) String() string { return proto.CompactTextString(m) }
func (*EmptyResponse) ProtoMessage()    {}
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{17}
}

func (m *EmptyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyResponse.Unmarshal(m, b)
}
func (m *EmptyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyResponse.Marshal(b, m, deterministic)
}
func (m *EmptyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyResponse.Merge(m, src)
}
func (m *EmptyResponse) XXX_Size() int {
	return xxx_messageInfo_EmptyResponse.Size(m)
}
func (m *EmptyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyResponse proto.InternalMessageInfo

type SampleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SampleResponse) Reset()         { *m = SampleResponse{} }
func (m *SampleResponse) String() string { return proto.CompactTextString(m) }
func (*SampleResponse) ProtoMessage()    {}
func (*SampleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e9ca9b191fc9851, []int{18}
}

func (m *SampleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleResponse.Unmarshal(m, b)
}
func (m *SampleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleResponse.Marshal(b, m, deterministic)
}
func (m *SampleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleResponse.Merge(m, src)
}
func (m *SampleResponse) XXX_Size() int {
	return xxx_messageInfo_SampleResponse.Size(m)
}
func (m *SampleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SampleResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("testdata.NestedEnumResponse_NestedMsg_NestedEnum", NestedEnumResponse_NestedMsg_NestedEnum_name, NestedEnumResponse_NestedMsg_NestedEnum_value)
	proto.RegisterType((*TypeCastingResponse)(nil), "testdata.TypeCastingResponse")
	proto.RegisterType((*TypeRequest)(nil), "testdata.TypeRequest")
	proto.RegisterType((*GoTypesResponse)(nil), "testdata.GoTypesResponse")
	proto.RegisterType((*RepeatedAssociationsResponse)(nil), "testdata.RepeatedAssociationsResponse")
	proto.RegisterType((*AuthorUserNameResponse)(nil), "testdata.AuthorUserNameResponse")
	proto.RegisterType((*RepeatedPrimativeResponse)(nil), "testdata.RepeatedPrimativeResponse")
	proto.RegisterType((*RepeatedEmptyResponse)(nil), "testdata.RepeatedEmptyResponse")
	proto.RegisterType((*RepeatedTimestampResponse)(nil), "testdata.RepeatedTimestampResponse")
	proto.RegisterType((*NestedFieldResponse)(nil), "testdata.NestedFieldResponse")
	proto.RegisterType((*AssociationInCollectionResponse)(nil), "testdata.AssociationInCollectionResponse")
	proto.RegisterType((*TagPost)(nil), "testdata.TagPost")
	proto.RegisterType((*PostBlog)(nil), "testdata.PostBlog")
	proto.RegisterType((*NestedBlog)(nil), "testdata.NestedBlog")
	proto.RegisterType((*CollectionInAssociationResponse)(nil), "testdata.CollectionInAssociationResponse")
	proto.RegisterType((*OnePost)(nil), "testdata.OnePost")
	proto.RegisterType((*NestedEnumResponse)(nil), "testdata.NestedEnumResponse")
	proto.RegisterType((*NestedEnumResponse_NestedMsg)(nil), "testdata.NestedEnumResponse.NestedMsg")
	proto.RegisterType((*EmptyRequest)(nil), "testdata.EmptyRequest")
	proto.RegisterType((*EmptyResponse)(nil), "testdata.EmptyResponse")
	proto.RegisterType((*SampleResponse)(nil), "testdata.SampleResponse")
}

func init() { proto.RegisterFile("testdata/tests.proto", fileDescriptor_2e9ca9b191fc9851) }

var fileDescriptor_2e9ca9b191fc9851 = []byte{
	// 1403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xeb, 0x6e, 0xdb, 0x46,
	0x16, 0x16, 0x7d, 0x93, 0x78, 0x64, 0xc9, 0xf6, 0xc4, 0x89, 0x1d, 0x6f, 0x02, 0x33, 0x13, 0xec,
	0x2e, 0x17, 0x9b, 0xc8, 0xbb, 0xb2, 0x6b, 0x14, 0x28, 0x9a, 0xd6, 0x76, 0xec, 0x42, 0x2d, 0xec,
	0xa4, 0x63, 0xbb, 0x28, 0x5a, 0xb4, 0x02, 0x2d, 0x8d, 0x19, 0x26, 0x24, 0x87, 0xe1, 0x0c, 0x03,
	0xfb, 0x19, 0xfa, 0x0c, 0xfd, 0xd3, 0x5f, 0x7d, 0x80, 0x3e, 0x48, 0x1f, 0xa9, 0x98, 0x0b, 0x2f,
	0x8a, 0x2c, 0x39, 0xe9, 0x3f, 0xce, 0x77, 0xce, 0xf9, 0xe6, 0xcc, 0xb9, 0xcc, 0x19, 0xc2, 0xaa,
	0xa0, 0x5c, 0x0c, 0x3d, 0xe1, 0x6d, 0xc9, 0x0f, 0xde, 0x49, 0x52, 0x26, 0x18, 0x6a, 0xe4, 0xe8,
	0xc6, 0xa6, 0xcf, 0x98, 0x1f, 0xd2, 0x2d, 0x85, 0x5f, 0x64, 0x97, 0x5b, 0x22, 0x88, 0x28, 0x17,
	0x5e, 0x94, 0x68, 0xd5, 0x8d, 0x55, 0x7a, 0xe5, 0x45, 0x49, 0x48, 0xf9, 0xd6, 0xdb, 0x8c, 0xa6,
	0xd7, 0x1a, 0xc5, 0xbf, 0xcf, 0xc1, 0x9d, 0xb3, 0xeb, 0x84, 0x1e, 0x78, 0x5c, 0x04, 0xb1, 0x4f,
	0x28, 0x4f, 0x58, 0xcc, 0x29, 0xda, 0x84, 0xe6, 0x90, 0x65, 0x17, 0x21, 0xed, 0x0f, 0x3c, 0x2e,
	0xd6, 0x2d, 0xc7, 0x72, 0x2d, 0x02, 0x1a, 0x92, 0xba, 0xe8, 0x21, 0xc0, 0x65, 0xc8, 0x3c, 0xa1,
	0xe5, 0x33, 0x8e, 0xe5, 0xce, 0x10, 0x5b, 0x21, 0xb9, 0x38, 0x88, 0xc5, 0x76, 0x57, 0x8b, 0x67,
	0x1d, 0xcb, 0x9d, 0x27, 0xb6, 0x42, 0x2a, 0xe2, 0xdd, 0x1d, 0x2d, 0x9e, 0x73, 0x2c, 0x77, 0x56,
	0x89, 0x77, 0x77, 0x94, 0x78, 0x13, 0x9a, 0x59, 0xc5, 0x7c, 0xde, 0xb1, 0xdc, 0x16, 0x81, 0xac,
	0xb4, 0x37, 0x0a, 0x39, 0xc1, 0x82, 0x63, 0xb9, 0x73, 0x5a, 0xa1, 0x64, 0xe0, 0x15, 0x86, 0xba,
	0x63, 0xb9, 0x2b, 0x04, 0xf8, 0x08, 0x03, 0xaf, 0x30, 0x34, 0x1c, 0xcb, 0x45, 0x5a, 0xc1, 0x30,
	0x3c, 0x82, 0xc5, 0xcb, 0xe0, 0x8a, 0x0e, 0x73, 0x0a, 0xdb, 0xb1, 0xdc, 0x3a, 0x69, 0x1a, 0x6c,
	0x44, 0x25, 0x27, 0x01, 0xc7, 0x72, 0x17, 0x8c, 0x8a, 0x61, 0x79, 0x0c, 0x2d, 0x3e, 0x42, 0xd3,
	0x74, 0x2c, 0x77, 0x89, 0x2c, 0xf2, 0x2a, 0x4f, 0xa1, 0x94, 0x13, 0x2d, 0x3a, 0x96, 0xbb, 0x9c,
	0x2b, 0x19, 0xa6, 0x7f, 0x80, 0x7d, 0xc1, 0x58, 0xa8, 0x15, 0x5a, 0x8e, 0xe5, 0x36, 0x48, 0x43,
	0x02, 0xc5, 0x69, 0x44, 0x1a, 0xc4, 0xbe, 0x16, 0xb7, 0x1d, 0xcb, 0xb5, 0x09, 0x68, 0x48, 0x29,
	0xec, 0x41, 0xbb, 0x28, 0x08, 0xad, 0xb3, 0xe4, 0x58, 0x6e, 0xb3, 0xbb, 0xd1, 0xd1, 0x75, 0xd3,
	0xc9, 0xeb, 0xa6, 0x73, 0x96, 0xab, 0x91, 0x56, 0x61, 0x21, 0x29, 0xf0, 0x13, 0x68, 0xca, 0x4a,
	0x21, 0xf4, 0x6d, 0x46, 0x75, 0x0a, 0xc5, 0x75, 0x42, 0xfb, 0xef, 0xbc, 0x30, 0xa3, 0xaa, 0x40,
	0x6c, 0x62, 0x4b, 0xe4, 0x3b, 0x09, 0xe0, 0x3f, 0x66, 0x60, 0xe9, 0x2b, 0x26, 0x0d, 0x78, 0x51,
	0x54, 0x0f, 0x01, 0x7c, 0xd6, 0x57, 0x45, 0xb2, 0xbb, 0x63, 0x6a, 0xca, 0xf6, 0xd9, 0x91, 0x06,
	0xaa, 0xe2, 0xed, 0x6e, 0x5e, 0x52, 0x46, 0xbc, 0xdd, 0x45, 0xf7, 0xa1, 0xe1, 0xb3, 0xbe, 0xca,
	0xa0, 0x29, 0xa8, 0xba, 0xcf, 0x7a, 0xf1, 0x88, 0x68, 0x77, 0xc7, 0x14, 0x93, 0x16, 0xed, 0xee,
	0xc8, 0xb0, 0xf9, 0xac, 0xaf, 0x4b, 0xc7, 0x14, 0x52, 0xc3, 0x67, 0xe7, 0x6a, 0x5d, 0x11, 0xee,
	0xee, 0x98, 0x22, 0x32, 0xc2, 0xdd, 0x1d, 0xb4, 0x06, 0x75, 0x9f, 0xf5, 0x65, 0x88, 0x55, 0xf9,
	0x34, 0xc8, 0x82, 0xcf, 0xf6, 0x19, 0x0b, 0x8d, 0x95, 0x0e, 0xae, 0x2a, 0x1c, 0x5b, 0x5a, 0x9d,
	0xaa, 0x35, 0xfa, 0x1c, 0x16, 0x7d, 0xd6, 0x2f, 0x22, 0xa7, 0xca, 0x66, 0x7a, 0x98, 0x9b, 0x3e,
	0x2b, 0x16, 0xf8, 0x47, 0x78, 0x40, 0x68, 0x42, 0x3d, 0x41, 0x87, 0x7b, 0x9c, 0xb3, 0x41, 0xe0,
	0x89, 0x80, 0xc5, 0x65, 0x08, 0xd7, 0xa0, 0x7e, 0x11, 0x32, 0xbf, 0x1f, 0x0c, 0x55, 0xfc, 0x5a,
	0x64, 0x41, 0x2e, 0x7b, 0x43, 0x84, 0x61, 0x2e, 0x61, 0xa6, 0x13, 0x9b, 0xdd, 0x76, 0x27, 0xef,
	0xf6, 0xce, 0x4b, 0xc6, 0x05, 0x51, 0x32, 0xbc, 0x07, 0xf7, 0xf6, 0x32, 0xf1, 0x8a, 0xa5, 0xe7,
	0x9c, 0xa6, 0x27, 0x5e, 0x44, 0x0b, 0xda, 0x7f, 0xc3, 0x92, 0xa7, 0x24, 0xfd, 0x8c, 0xd3, 0x34,
	0xf6, 0xa2, 0x3c, 0xa3, 0x6d, 0xaf, 0x30, 0x90, 0x28, 0x7e, 0x06, 0xf7, 0x73, 0xff, 0x5e, 0xa6,
	0x41, 0xe4, 0x89, 0xe0, 0x5d, 0xc9, 0xf2, 0x08, 0x16, 0x53, 0x23, 0x94, 0xc9, 0x58, 0xb7, 0x9c,
	0x59, 0xb7, 0x45, 0x9a, 0x39, 0xd6, 0x8b, 0x05, 0x4e, 0xe0, 0x6e, 0x6e, 0x7f, 0x18, 0x25, 0xe2,
	0xfa, 0xf6, 0x83, 0x3d, 0x83, 0x36, 0x95, 0x9a, 0xfd, 0xd4, 0xa8, 0xae, 0xcf, 0x38, 0xb3, 0x6e,
	0xb3, 0xbb, 0xd6, 0xc9, 0xef, 0xbe, 0xce, 0x08, 0x13, 0x69, 0xd1, 0xea, 0x12, 0x5f, 0x95, 0x1e,
	0x97, 0x31, 0xbf, 0x75, 0xd7, 0x7d, 0x58, 0x92, 0x21, 0xeb, 0x0f, 0x52, 0x7d, 0x1c, 0x16, 0x9b,
	0x6d, 0xa7, 0x36, 0x8c, 0x34, 0x39, 0xd0, 0x16, 0x2f, 0x62, 0xfc, 0x13, 0xdc, 0x39, 0xa1, 0x5c,
	0xd0, 0xe1, 0x51, 0x40, 0xc3, 0xe1, 0xed, 0x7b, 0x3e, 0x85, 0x79, 0xe5, 0xba, 0xc9, 0xe1, 0xc4,
	0x03, 0x6a, 0x2d, 0x7c, 0x09, 0x9b, 0x95, 0x12, 0xe9, 0xc5, 0x07, 0x2c, 0x0c, 0xe9, 0x40, 0x7e,
	0x17, 0x5b, 0xdd, 0x85, 0x05, 0xe1, 0x55, 0x76, 0x9a, 0x17, 0x9e, 0xdc, 0xe8, 0x09, 0x34, 0x24,
	0x6c, 0xea, 0x45, 0x9e, 0x6a, 0xa5, 0xdc, 0xeb, 0xcc, 0xf3, 0x55, 0xc9, 0xd4, 0x85, 0xfe, 0xc0,
	0xa7, 0x50, 0x37, 0x98, 0x74, 0x5d, 0x45, 0xa5, 0x74, 0x5d, 0x2e, 0x7b, 0x43, 0xb4, 0x05, 0xb6,
	0x12, 0xc8, 0x93, 0x18, 0xf7, 0x51, 0x49, 0x29, 0x6d, 0xf7, 0x43, 0xe6, 0x93, 0x46, 0x62, 0xbe,
	0xf0, 0x63, 0x68, 0xe4, 0xe8, 0xc4, 0x80, 0xe0, 0x18, 0x40, 0x07, 0x70, 0xaa, 0x9a, 0xbc, 0x37,
	0x94, 0x40, 0x04, 0x22, 0xa4, 0x6a, 0x77, 0x9b, 0xd8, 0x12, 0x39, 0x93, 0x00, 0x72, 0x61, 0x41,
	0x17, 0xb1, 0xba, 0x35, 0x9a, 0xdd, 0xe5, 0xb2, 0x37, 0x74, 0x37, 0x10, 0x23, 0xc7, 0x1e, 0x6c,
	0x96, 0x41, 0xec, 0xc5, 0x95, 0xe8, 0x56, 0x93, 0x77, 0x73, 0x04, 0xfe, 0x39, 0xd2, 0x7f, 0x95,
	0x78, 0xbe, 0x88, 0x69, 0xa5, 0x05, 0x8f, 0xa0, 0x6e, 0x00, 0xd4, 0x86, 0x19, 0xc3, 0x62, 0x93,
	0x99, 0x60, 0x88, 0xfe, 0x0b, 0xf5, 0x01, 0x8b, 0x22, 0x1a, 0x97, 0x49, 0x29, 0x1c, 0x3d, 0xd0,
	0x02, 0x92, 0x6b, 0xe0, 0x5f, 0x66, 0x00, 0xe9, 0xd8, 0x1c, 0xc6, 0x59, 0x54, 0xb8, 0xf7, 0x3e,
	0xe7, 0x21, 0x40, 0xac, 0xb4, 0xfa, 0x11, 0xcf, 0x13, 0xf3, 0xaf, 0xd2, 0xb7, 0x71, 0x06, 0x03,
	0x1d, 0x73, 0x9f, 0xd8, 0x71, 0xfe, 0xb9, 0xf1, 0xab, 0x05, 0x76, 0x21, 0x90, 0xf7, 0x9f, 0x21,
	0x2d, 0xf6, 0x6a, 0x68, 0xa0, 0x37, 0x44, 0x04, 0x9a, 0x46, 0x48, 0xe3, 0x2c, 0x52, 0x5b, 0xb6,
	0xbb, 0xff, 0xff, 0xb0, 0x2d, 0xab, 0x42, 0xe3, 0xb7, 0xfc, 0xc6, 0x9b, 0x79, 0x1d, 0xc8, 0x15,
	0x6a, 0xc0, 0x1c, 0x4f, 0xbc, 0x78, 0xb9, 0x86, 0xea, 0x30, 0x4b, 0x7d, 0x7f, 0xd9, 0xc2, 0x6d,
	0x58, 0x34, 0x2d, 0xa2, 0x66, 0x13, 0x5e, 0x82, 0xd6, 0x48, 0xcb, 0xe0, 0x65, 0x68, 0x9f, 0xaa,
	0x50, 0xe6, 0x48, 0xf7, 0x37, 0x0b, 0xd0, 0x19, 0xe5, 0x82, 0xd0, 0x4b, 0x99, 0xf0, 0x53, 0x9a,
	0xbe, 0x0b, 0x06, 0x14, 0x1d, 0xe9, 0x21, 0x67, 0x9e, 0x43, 0xe8, 0xde, 0x58, 0x0f, 0xaa, 0x0d,
	0x36, 0x1e, 0x56, 0xfa, 0x65, 0xfc, 0xf5, 0x84, 0x6b, 0xe8, 0x39, 0xb4, 0x7b, 0xf1, 0x80, 0xa5,
	0x29, 0x1d, 0x08, 0x35, 0x04, 0xd1, 0xdd, 0x51, 0x93, 0x9c, 0xe9, 0x7e, 0x09, 0xbf, 0x37, 0x2e,
	0x71, 0xad, 0xfb, 0xa7, 0xad, 0x9d, 0x3c, 0xf6, 0x92, 0x24, 0x88, 0xfd, 0xdc, 0xc9, 0xef, 0x61,
	0xf5, 0xa6, 0x21, 0x31, 0xd1, 0xdb, 0x4a, 0xc6, 0xa7, 0x0d, 0x17, 0x5c, 0x43, 0x5f, 0x02, 0x28,
	0xcb, 0x6f, 0xe5, 0x13, 0x71, 0x22, 0xdf, 0x7a, 0x89, 0x8f, 0x46, 0x15, 0xd7, 0xd0, 0x17, 0xb0,
	0xd2, 0x8b, 0x39, 0x4d, 0x85, 0xa2, 0xd8, 0xe3, 0x87, 0x57, 0x74, 0x30, 0x91, 0x68, 0xac, 0x15,
	0x71, 0x0d, 0xed, 0x41, 0x53, 0xda, 0xec, 0xf1, 0xbf, 0xef, 0xc3, 0x09, 0x2c, 0x9f, 0xc7, 0x83,
	0xd0, 0x0b, 0x22, 0x3a, 0x3c, 0x60, 0x61, 0x16, 0x4d, 0x89, 0x8d, 0x53, 0xe2, 0x37, 0xcf, 0x46,
	0x5c, 0x43, 0xfb, 0xb0, 0x7a, 0x9c, 0x85, 0x22, 0x30, 0xbb, 0x1c, 0xb1, 0xf4, 0x3c, 0xf6, 0xa6,
	0xf8, 0x76, 0xd3, 0xb1, 0x08, 0xac, 0x8c, 0x0d, 0xce, 0x89, 0x04, 0x8f, 0xc7, 0x13, 0x36, 0x36,
	0x6d, 0x71, 0x0d, 0x7d, 0x0d, 0xad, 0x91, 0x61, 0x3a, 0x91, 0x6f, 0x73, 0x9c, 0x6f, 0xb4, 0x3f,
	0x6a, 0xe8, 0x1b, 0x58, 0x56, 0x50, 0x65, 0x62, 0x7d, 0x48, 0xf5, 0xdf, 0x30, 0xe0, 0x74, 0x11,
	0x9c, 0xb0, 0x63, 0x4f, 0x0c, 0x5e, 0xc9, 0xf7, 0xe7, 0x2d, 0x19, 0xb8, 0x29, 0x5a, 0x3f, 0xc3,
	0xda, 0x84, 0xd9, 0x36, 0x91, 0xe6, 0x3f, 0x95, 0x44, 0x4e, 0x1f, 0x8b, 0x9a, 0x7f, 0xc2, 0x4d,
	0xff, 0x21, 0xfc, 0xb7, 0x0c, 0x89, 0xd1, 0x6c, 0x17, 0xcf, 0x83, 0x8f, 0xc9, 0xf6, 0xd8, 0x4b,
	0x45, 0x5d, 0x29, 0xf7, 0x4e, 0xb2, 0x30, 0x24, 0x94, 0xb3, 0x2c, 0x14, 0xfc, 0x88, 0xa5, 0xa7,
	0xd9, 0x45, 0xe4, 0x25, 0x93, 0x23, 0xfb, 0xde, 0x2b, 0x10, 0xd7, 0xfe, 0x67, 0xa1, 0x4f, 0x01,
	0x4e, 0x03, 0x89, 0xa9, 0xbb, 0xf4, 0x63, 0x72, 0xf2, 0x7c, 0xe4, 0x16, 0x9e, 0x64, 0xf9, 0x60,
	0xda, 0x55, 0x8f, 0x6b, 0xfb, 0x9f, 0xfc, 0xb0, 0xed, 0x07, 0xe2, 0x55, 0x76, 0xd1, 0x19, 0xb0,
	0x68, 0xeb, 0xb5, 0x37, 0x78, 0xc3, 0xdf, 0xbc, 0xd6, 0x7f, 0xad, 0x83, 0xa7, 0x3e, 0x8d, 0x9f,
	0x46, 0x5e, 0xb2, 0x95, 0x53, 0x7c, 0x96, 0x7f, 0x5c, 0x2c, 0x28, 0x8d, 0xed, 0xbf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x94, 0x93, 0x92, 0xe9, 0x07, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestReflectServiceClient is the client API for TestReflectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestReflectServiceClient interface {
	TypeCasting(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TypeCastingResponse, error)
	IncorrectTypes(ctx context.Context, in *TypeRequest, opts ...grpc.CallOption) (*GoTypesResponse, error)
}

type testReflectServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestReflectServiceClient(cc *grpc.ClientConn) TestReflectServiceClient {
	return &testReflectServiceClient{cc}
}

func (c *testReflectServiceClient) TypeCasting(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*TypeCastingResponse, error) {
	out := new(TypeCastingResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestReflectService/TypeCasting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testReflectServiceClient) IncorrectTypes(ctx context.Context, in *TypeRequest, opts ...grpc.CallOption) (*GoTypesResponse, error) {
	out := new(GoTypesResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestReflectService/IncorrectTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestReflectServiceServer is the server API for TestReflectService service.
type TestReflectServiceServer interface {
	TypeCasting(context.Context, *EmptyRequest) (*TypeCastingResponse, error)
	IncorrectTypes(context.Context, *TypeRequest) (*GoTypesResponse, error)
}

// UnimplementedTestReflectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestReflectServiceServer struct {
}

func (*UnimplementedTestReflectServiceServer) TypeCasting(ctx context.Context, req *EmptyRequest) (*TypeCastingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TypeCasting not implemented")
}
func (*UnimplementedTestReflectServiceServer) IncorrectTypes(ctx context.Context, req *TypeRequest) (*GoTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncorrectTypes not implemented")
}

func RegisterTestReflectServiceServer(s *grpc.Server, srv TestReflectServiceServer) {
	s.RegisterService(&_TestReflectService_serviceDesc, srv)
}

func _TestReflectService_TypeCasting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestReflectServiceServer).TypeCasting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestReflectService/TypeCasting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestReflectServiceServer).TypeCasting(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestReflectService_IncorrectTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestReflectServiceServer).IncorrectTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestReflectService/IncorrectTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestReflectServiceServer).IncorrectTypes(ctx, req.(*TypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestReflectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testdata.TestReflectService",
	HandlerType: (*TestReflectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TypeCasting",
			Handler:    _TestReflectService_TypeCasting_Handler,
		},
		{
			MethodName: "IncorrectTypes",
			Handler:    _TestReflectService_IncorrectTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "testdata/tests.proto",
}

// TestMappingServiceClient is the client API for TestMappingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestMappingServiceClient interface {
	RepeatedAssociations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedAssociationsResponse, error)
	EmptyQuery(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SampleResponse, error)
	InsertQueryAsExec(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error)
	ExecAsQuery(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SampleResponse, error)
	UnclaimedColumns(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AuthorUserNameResponse, error)
	MultipleRespForUnary(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error)
	RepeatedPrimative(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedPrimativeResponse, error)
	RepeatedEmpty(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedEmptyResponse, error)
	EmptyNestedField(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NestedFieldResponse, error)
	NoMatchingColumns(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error)
	AssociationInCollection(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AssociationInCollectionResponse, error)
	CollectionInAssociation(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CollectionInAssociationResponse, error)
	RepeatedTimestamp(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedTimestampResponse, error)
	NullResoultsForSubmaps(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (TestMappingService_NullResoultsForSubmapsClient, error)
	SimpleEnum(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error)
	NestedEnum(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NestedEnumResponse, error)
}

type testMappingServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestMappingServiceClient(cc *grpc.ClientConn) TestMappingServiceClient {
	return &testMappingServiceClient{cc}
}

func (c *testMappingServiceClient) RepeatedAssociations(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedAssociationsResponse, error) {
	out := new(RepeatedAssociationsResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/RepeatedAssociations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) EmptyQuery(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SampleResponse, error) {
	out := new(SampleResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/EmptyQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) InsertQueryAsExec(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error) {
	out := new(examples.Author)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/InsertQueryAsExec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) ExecAsQuery(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SampleResponse, error) {
	out := new(SampleResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/ExecAsQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) UnclaimedColumns(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AuthorUserNameResponse, error) {
	out := new(AuthorUserNameResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/UnclaimedColumns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) MultipleRespForUnary(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error) {
	out := new(examples.Author)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/MultipleRespForUnary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) RepeatedPrimative(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedPrimativeResponse, error) {
	out := new(RepeatedPrimativeResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/RepeatedPrimative", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) RepeatedEmpty(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedEmptyResponse, error) {
	out := new(RepeatedEmptyResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/RepeatedEmpty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) EmptyNestedField(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NestedFieldResponse, error) {
	out := new(NestedFieldResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/EmptyNestedField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) NoMatchingColumns(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error) {
	out := new(examples.Author)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/NoMatchingColumns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) AssociationInCollection(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*AssociationInCollectionResponse, error) {
	out := new(AssociationInCollectionResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/AssociationInCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) CollectionInAssociation(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CollectionInAssociationResponse, error) {
	out := new(CollectionInAssociationResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/CollectionInAssociation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) RepeatedTimestamp(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RepeatedTimestampResponse, error) {
	out := new(RepeatedTimestampResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/RepeatedTimestamp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) NullResoultsForSubmaps(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (TestMappingService_NullResoultsForSubmapsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TestMappingService_serviceDesc.Streams[0], "/testdata.TestMappingService/NullResoultsForSubmaps", opts...)
	if err != nil {
		return nil, err
	}
	x := &testMappingServiceNullResoultsForSubmapsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TestMappingService_NullResoultsForSubmapsClient interface {
	Recv() (*examples.Post, error)
	grpc.ClientStream
}

type testMappingServiceNullResoultsForSubmapsClient struct {
	grpc.ClientStream
}

func (x *testMappingServiceNullResoultsForSubmapsClient) Recv() (*examples.Post, error) {
	m := new(examples.Post)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *testMappingServiceClient) SimpleEnum(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*examples.Author, error) {
	out := new(examples.Author)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/SimpleEnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testMappingServiceClient) NestedEnum(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NestedEnumResponse, error) {
	out := new(NestedEnumResponse)
	err := c.cc.Invoke(ctx, "/testdata.TestMappingService/NestedEnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestMappingServiceServer is the server API for TestMappingService service.
type TestMappingServiceServer interface {
	RepeatedAssociations(context.Context, *EmptyRequest) (*RepeatedAssociationsResponse, error)
	EmptyQuery(context.Context, *EmptyRequest) (*SampleResponse, error)
	InsertQueryAsExec(context.Context, *EmptyRequest) (*examples.Author, error)
	ExecAsQuery(context.Context, *EmptyRequest) (*SampleResponse, error)
	UnclaimedColumns(context.Context, *EmptyRequest) (*AuthorUserNameResponse, error)
	MultipleRespForUnary(context.Context, *EmptyRequest) (*examples.Author, error)
	RepeatedPrimative(context.Context, *EmptyRequest) (*RepeatedPrimativeResponse, error)
	RepeatedEmpty(context.Context, *EmptyRequest) (*RepeatedEmptyResponse, error)
	EmptyNestedField(context.Context, *EmptyRequest) (*NestedFieldResponse, error)
	NoMatchingColumns(context.Context, *EmptyRequest) (*examples.Author, error)
	AssociationInCollection(context.Context, *EmptyRequest) (*AssociationInCollectionResponse, error)
	CollectionInAssociation(context.Context, *EmptyRequest) (*CollectionInAssociationResponse, error)
	RepeatedTimestamp(context.Context, *EmptyRequest) (*RepeatedTimestampResponse, error)
	NullResoultsForSubmaps(*EmptyRequest, TestMappingService_NullResoultsForSubmapsServer) error
	SimpleEnum(context.Context, *EmptyRequest) (*examples.Author, error)
	NestedEnum(context.Context, *EmptyRequest) (*NestedEnumResponse, error)
}

// UnimplementedTestMappingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestMappingServiceServer struct {
}

func (*UnimplementedTestMappingServiceServer) RepeatedAssociations(ctx context.Context, req *EmptyRequest) (*RepeatedAssociationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatedAssociations not implemented")
}
func (*UnimplementedTestMappingServiceServer) EmptyQuery(ctx context.Context, req *EmptyRequest) (*SampleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmptyQuery not implemented")
}
func (*UnimplementedTestMappingServiceServer) InsertQueryAsExec(ctx context.Context, req *EmptyRequest) (*examples.Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertQueryAsExec not implemented")
}
func (*UnimplementedTestMappingServiceServer) ExecAsQuery(ctx context.Context, req *EmptyRequest) (*SampleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecAsQuery not implemented")
}
func (*UnimplementedTestMappingServiceServer) UnclaimedColumns(ctx context.Context, req *EmptyRequest) (*AuthorUserNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnclaimedColumns not implemented")
}
func (*UnimplementedTestMappingServiceServer) MultipleRespForUnary(ctx context.Context, req *EmptyRequest) (*examples.Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultipleRespForUnary not implemented")
}
func (*UnimplementedTestMappingServiceServer) RepeatedPrimative(ctx context.Context, req *EmptyRequest) (*RepeatedPrimativeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatedPrimative not implemented")
}
func (*UnimplementedTestMappingServiceServer) RepeatedEmpty(ctx context.Context, req *EmptyRequest) (*RepeatedEmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatedEmpty not implemented")
}
func (*UnimplementedTestMappingServiceServer) EmptyNestedField(ctx context.Context, req *EmptyRequest) (*NestedFieldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmptyNestedField not implemented")
}
func (*UnimplementedTestMappingServiceServer) NoMatchingColumns(ctx context.Context, req *EmptyRequest) (*examples.Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoMatchingColumns not implemented")
}
func (*UnimplementedTestMappingServiceServer) AssociationInCollection(ctx context.Context, req *EmptyRequest) (*AssociationInCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssociationInCollection not implemented")
}
func (*UnimplementedTestMappingServiceServer) CollectionInAssociation(ctx context.Context, req *EmptyRequest) (*CollectionInAssociationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectionInAssociation not implemented")
}
func (*UnimplementedTestMappingServiceServer) RepeatedTimestamp(ctx context.Context, req *EmptyRequest) (*RepeatedTimestampResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepeatedTimestamp not implemented")
}
func (*UnimplementedTestMappingServiceServer) NullResoultsForSubmaps(req *EmptyRequest, srv TestMappingService_NullResoultsForSubmapsServer) error {
	return status.Errorf(codes.Unimplemented, "method NullResoultsForSubmaps not implemented")
}
func (*UnimplementedTestMappingServiceServer) SimpleEnum(ctx context.Context, req *EmptyRequest) (*examples.Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SimpleEnum not implemented")
}
func (*UnimplementedTestMappingServiceServer) NestedEnum(ctx context.Context, req *EmptyRequest) (*NestedEnumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NestedEnum not implemented")
}

func RegisterTestMappingServiceServer(s *grpc.Server, srv TestMappingServiceServer) {
	s.RegisterService(&_TestMappingService_serviceDesc, srv)
}

func _TestMappingService_RepeatedAssociations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).RepeatedAssociations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/RepeatedAssociations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).RepeatedAssociations(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_EmptyQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).EmptyQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/EmptyQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).EmptyQuery(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_InsertQueryAsExec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).InsertQueryAsExec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/InsertQueryAsExec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).InsertQueryAsExec(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_ExecAsQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).ExecAsQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/ExecAsQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).ExecAsQuery(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_UnclaimedColumns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).UnclaimedColumns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/UnclaimedColumns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).UnclaimedColumns(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_MultipleRespForUnary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).MultipleRespForUnary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/MultipleRespForUnary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).MultipleRespForUnary(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_RepeatedPrimative_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).RepeatedPrimative(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/RepeatedPrimative",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).RepeatedPrimative(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_RepeatedEmpty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).RepeatedEmpty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/RepeatedEmpty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).RepeatedEmpty(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_EmptyNestedField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).EmptyNestedField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/EmptyNestedField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).EmptyNestedField(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_NoMatchingColumns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).NoMatchingColumns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/NoMatchingColumns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).NoMatchingColumns(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_AssociationInCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).AssociationInCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/AssociationInCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).AssociationInCollection(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_CollectionInAssociation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).CollectionInAssociation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/CollectionInAssociation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).CollectionInAssociation(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_RepeatedTimestamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).RepeatedTimestamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/RepeatedTimestamp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).RepeatedTimestamp(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_NullResoultsForSubmaps_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmptyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TestMappingServiceServer).NullResoultsForSubmaps(m, &testMappingServiceNullResoultsForSubmapsServer{stream})
}

type TestMappingService_NullResoultsForSubmapsServer interface {
	Send(*examples.Post) error
	grpc.ServerStream
}

type testMappingServiceNullResoultsForSubmapsServer struct {
	grpc.ServerStream
}

func (x *testMappingServiceNullResoultsForSubmapsServer) Send(m *examples.Post) error {
	return x.ServerStream.SendMsg(m)
}

func _TestMappingService_SimpleEnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).SimpleEnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/SimpleEnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).SimpleEnum(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestMappingService_NestedEnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestMappingServiceServer).NestedEnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testdata.TestMappingService/NestedEnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestMappingServiceServer).NestedEnum(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestMappingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testdata.TestMappingService",
	HandlerType: (*TestMappingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RepeatedAssociations",
			Handler:    _TestMappingService_RepeatedAssociations_Handler,
		},
		{
			MethodName: "EmptyQuery",
			Handler:    _TestMappingService_EmptyQuery_Handler,
		},
		{
			MethodName: "InsertQueryAsExec",
			Handler:    _TestMappingService_InsertQueryAsExec_Handler,
		},
		{
			MethodName: "ExecAsQuery",
			Handler:    _TestMappingService_ExecAsQuery_Handler,
		},
		{
			MethodName: "UnclaimedColumns",
			Handler:    _TestMappingService_UnclaimedColumns_Handler,
		},
		{
			MethodName: "MultipleRespForUnary",
			Handler:    _TestMappingService_MultipleRespForUnary_Handler,
		},
		{
			MethodName: "RepeatedPrimative",
			Handler:    _TestMappingService_RepeatedPrimative_Handler,
		},
		{
			MethodName: "RepeatedEmpty",
			Handler:    _TestMappingService_RepeatedEmpty_Handler,
		},
		{
			MethodName: "EmptyNestedField",
			Handler:    _TestMappingService_EmptyNestedField_Handler,
		},
		{
			MethodName: "NoMatchingColumns",
			Handler:    _TestMappingService_NoMatchingColumns_Handler,
		},
		{
			MethodName: "AssociationInCollection",
			Handler:    _TestMappingService_AssociationInCollection_Handler,
		},
		{
			MethodName: "CollectionInAssociation",
			Handler:    _TestMappingService_CollectionInAssociation_Handler,
		},
		{
			MethodName: "RepeatedTimestamp",
			Handler:    _TestMappingService_RepeatedTimestamp_Handler,
		},
		{
			MethodName: "SimpleEnum",
			Handler:    _TestMappingService_SimpleEnum_Handler,
		},
		{
			MethodName: "NestedEnum",
			Handler:    _TestMappingService_NestedEnum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NullResoultsForSubmaps",
			Handler:       _TestMappingService_NullResoultsForSubmaps_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "testdata/tests.proto",
}
